managed implementation in class ybp_gate_header unique;
//strict ( 2 );

define behavior for YGATE_HEADER //alias <alias_name>
persistent table ygatehead1
lock master
authorization master ( instance )
//etag master <field_name>
{

 field ( readonly )
   CreatedAt,
   CreatedBy,
   LocalLastChangedAt,
   LastChangedAt,
   LastChangedBy;

  create;
  update;
  delete;

  association _gateitem { create; }
  mapping for ygatehead1
  {
  Gateno = gateno;
    EntryType = entry_type;
    Werks = werks;
    PlantName = plant_name;
    Operator = operator;
    Lifnr = lifnr;
    Kunnr = kunnr;
    Name1 = name1;
    LrDate = lr_date;
    LrNo = lr_no;
    VehicalNo = vehical_no;
    GateInDt = gate_in_dt;
    GateInTm = gate_in_tm;
    Driver = driver;
    DrLisc = dr_lisc;
    GateOutDt = gate_out_dt;
    GateOutTm = gate_out_tm;
    Remark = remark;
    Approved = approved;
    GrossWt = gross_wt;
    TareWt = tare_wt;
    NetWt = net_wt;
    GrUnit = gr_unit;
    TrUnit = tr_unit;
    GrOper = gr_oper;
    TrOper = tr_oper;
    GrDate = gr_date;
    TrDate = tr_date;
    WtBrNo = wt_br_no;
    WtPortNo = wt_port_no;
    OrgInv = org_inv;
    EWay   = e_way;
    EwayDate = eway_date ;
    GateInDate = gate_in_date ;
    RefGate =  ref_gate ;
    Plant  = plant  ;
    Driverno = driverno ;
    Puchgrp = puchgrp ;
    Cancelled = cancelled ;
    Invoice  = invoice ;
    Container = container ;
    Invdt    =  invdt;
    Entrydate = entrydate;
    sleepno  = sleepno;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
  }
}

define behavior for YGATE_ITEMCDS //alias <alias_name>
persistent table YGATEITEM1
lock dependent by _gatehead
authorization dependent by _gatehead
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) Gateno;
  determination Sono on modify {create;}
  association _gatehead;
  mapping for Ygateitem1
  {
  Gateno  = gateno;
   GateItem = gate_item;
   Lifnr   = lifnr;
   Matnr  = matnr;
   Ebeln = ebeln;
   Ebelp = ebelp ;
  Mblnr  = mblnr;
 Zeile = zeile ;
 Delievery =  delievery;
 Posnr =  posnr ;
 Banfn = banfn ;
 Bnfpo = bnfpo ;
 Maktx = maktx ;
OrderQty = order_qty ;
OpenQty = open_qty  ;
GateQty = gate_qty ;
OutQty =  out_qty ;
OutValue = out_value ;
InQty =  in_qty ;
InValue = in_value ;
Uom = uom;
RsplName = rspl_name ;
Expdat = expdat ;
Remark = remark ;
Zinvoice  = zinvoice;
name1   = Name1;
ZbagQty  = zbag_qty ;
Refgateno = refgateno ;
Refgateit = refgateit ;
Reject = reject ;
Lpnum =  lpnum ;
Lppos = lppos ;
Sono =  sono ;
 Soitm =  soitm ;


  }
}